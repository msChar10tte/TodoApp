name: CI/CD Pipeline for TodoApp

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: self-hosted # Используем твой self-hosted раннер для этого этапа
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven and Run Tests
        # Запускаем фазу 'verify', которая включает компиляцию и выполнение тестов
        run: mvn -B verify --file pom.xml

      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v3
        with:
          name: todoapp-jar
          path: target/*.jar # Убедись, что путь к JAR корректен (например, target/todoapp-0.0.1-SNAPSHOT.jar)

      - name: Notify on build and test result
        run: echo "Build and tests completed successfully!"

  build-and-push-docker:
    runs-on: self-hosted # Используем твой self-hosted раннер
    needs: build-and-test # Зависит от успешной сборки и тестов
    env:
      IMAGE_NAME: todoapp
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }} # Твой логин в Docker Hub

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: todoapp-jar
          path: target/ # Скачиваем JAR в папку target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # --- Аутентификация в Docker Hub ---
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} # Секрет с паролем/токеном Docker Hub

      - name: Build and push Docker image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest # Тэг для Docker Hub

      - name: Notify on Docker image build and push result
        run: echo "Docker image build and push to Docker Hub completed successfully!"

  deploy:
    runs-on: self-hosted # Используем твой self-hosted раннер
    needs: build-and-push-docker # Зависит от успешной сборки и пуша Docker-образа
    environment: production # Используем окружение GitHub для защиты деплоя
    env:
      IMAGE_NAME: todoapp
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }} # Твой логин в Docker Hub

    steps:
      - name: Notify about deployment start
        run: echo "Deployment process started on self-hosted runner..."

      # --- Аутентификация в Docker Hub для docker pull на раннере ---
      - name: Login to Docker Hub (for docker pull on runner)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy Docker image on self-hosted runner
        run: |
          echo "Pulling latest Docker image from Docker Hub..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

          echo "Stopping and removing existing container (if any)..."
          if [ "$(docker ps -q -f name=${{ env.IMAGE_NAME }})" ]; then
            docker stop ${{ env.IMAGE_NAME }}
            docker rm ${{ env.IMAGE_NAME }}
          fi

          echo "Running new Docker container..."
          docker run -d \
            --name ${{ env.IMAGE_NAME }} \
            -p 8080:8080 \
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

          echo "Deployment to self-hosted runner completed successfully! Check http://<IP_адрес_твоей_ВМ>:8080/tasks"

      - name: Notify on deployment result
        run: echo "Deployment completed successfully!"